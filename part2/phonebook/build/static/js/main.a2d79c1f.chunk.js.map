{"version":3,"sources":["services/phonebook.jsx","components/Numbers.jsx","components/Filter.jsx","components/PersonForm.jsx","components/Notification.jsx","App.jsx","index.jsx"],"names":["baseUrl","phonebook","axios","get","then","response","data","person","post","id","delete","concat","put","Numbers","_ref","contacts","filteredPersons","setFilteredPersons","newFilter","setContacts","deleteContact","window","confirm","name","filter","contact","length","catch","names","map","react_default","a","createElement","key","number","onClick","filtered","result","Filter","setNewFilter","persons","value","onChange","event","target","filterWord","toLowerCase","includes","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","type","successStyle","color","backgroundColor","margin","marginRight","padding","borderRadius","errorStyle","Notification","message","className","style","isSuccess","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","infoBox","setInfoBox","useEffect","components_Filter","components_Notification","components_PersonForm","preventDefault","allNames","updateFilterForNewNumber","error","status","console","log","isSucess","setTimeout","updateFilter","alert","components_Numbers","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a2d79c1f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data);\r\n};\r\n\r\nconst add = person => {\r\n    return axios.post(baseUrl, person).then(response => response.data);\r\n};\r\n\r\nconst deleteContact = id => {\r\n    return axios.delete(baseUrl + `/${id}`);\r\n};\r\n\r\nconst updateContact = person => {\r\n    return axios\r\n        .put(baseUrl + `/${person.id}`, person)\r\n        .then(response => response.data);\r\n};\r\n\r\nexport default { getAll, add, deleteContact, updateContact };\r\n","import React from \"react\";\r\nimport phonebook from \"../services/phonebook\";\r\n\r\nconst Numbers = ({\r\n    contacts,\r\n    filteredPersons,\r\n    setFilteredPersons,\r\n    newFilter,\r\n    setContacts\r\n}) => {\r\n    const deleteContact = person => () => {\r\n        if (window.confirm(`Delete ${person.name}?`)) {\r\n            phonebook\r\n                .deleteContact(person.id)\r\n                .then(() => {\r\n                    // update contacts\r\n                    setContacts(\r\n                        contacts.filter(contact => contact.id !== person.id)\r\n                    );\r\n\r\n                    // update filter if search is active\r\n                    if (filteredPersons.length > 0) {\r\n                        setFilteredPersons(\r\n                            filteredPersons.filter(\r\n                                contact => contact.id !== person.id\r\n                            )\r\n                        );\r\n                    }\r\n                })\r\n                .catch(`Could not delete ${person}`);\r\n        }\r\n    };\r\n\r\n    // create HTML for all contacts\r\n    const names = contacts.map(person => (\r\n        <div key={person.name}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={deleteContact(person)}>delete</button>\r\n        </div>\r\n    ));\r\n\r\n    // create HTML for filtered\r\n    const filtered = filteredPersons.map(person => (\r\n        <div key={person.name}>\r\n            {person.name} {person.number}{\" \"}\r\n            <button onClick={deleteContact(person)}>delete</button>\r\n        </div>\r\n    ));\r\n\r\n    // show filtered result or all names if no filter active\r\n    let result =\r\n        (newFilter.length > 0 && filteredPersons.length > 0) ||\r\n        !(filteredPersons.length === 0 && newFilter.length === 0);\r\n\r\n    return <div>{result ? filtered : names}</div>;\r\n};\r\n\r\nexport default Numbers;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ newFilter, setNewFilter, setFilteredPersons, persons }) => {\r\n    const handleFilterChange = event => {\r\n        // update filter value\r\n        setNewFilter(event.target.value);\r\n        let filterWord = event.target.value;\r\n\r\n        // sort out people who matches filter\r\n        const filtered = persons.filter(person =>\r\n            person.name.toLowerCase().includes(filterWord.toLowerCase())\r\n        );\r\n\r\n        // update filtered state\r\n        setFilteredPersons(filtered);\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            filter shown with:\r\n            <input value={newFilter} onChange={handleFilterChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n    addPerson,\r\n    newName,\r\n    setNewName,\r\n    newNumber,\r\n    setNewNumber\r\n}) => {\r\n    const handleNameChange = event => setNewName(event.target.value);\r\n    const handleNumberChange = event => setNewNumber(event.target.value);\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number:\r\n                <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst successStyle = {\r\n    color: \"#270\",\r\n    backgroundColor: \"#dff2bf\",\r\n    margin: \"10px 0\",\r\n    marginRight: \"75%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"3px 3px 3px 3px\"\r\n};\r\n\r\nconst errorStyle = {\r\n    color: \"#D8000C\",\r\n    backgroundColor: \"#FFBABA\",\r\n    margin: \"10px 0\",\r\n    marginRight: \"75%\",\r\n    padding: \"10px\",\r\n    borderRadius: \"3px 3px 3px 3px\"\r\n};\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message.message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"success\"\r\n            style={message.isSuccess ? successStyle : errorStyle}\r\n        >\r\n            {message.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport phonebook from \"./services/phonebook\";\r\nimport Numbers from \"./components/Numbers\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState(\"\");\r\n    const [newNumber, setNewNumber] = useState(\"\");\r\n    const [newFilter, setNewFilter] = useState(\"\");\r\n    const [filteredPersons, setFilteredPersons] = useState([]);\r\n    const [infoBox, setInfoBox] = useState({ message: null, isSuccess: true });\r\n\r\n    // effect hook for json server\r\n    useEffect(() => {\r\n        phonebook.getAll().then(phonebook => {\r\n            setPersons(phonebook);\r\n        });\r\n    }, []);\r\n\r\n    // update the contact and forms locally\r\n    const fixContact = contact => {\r\n        setPersons(persons.concat(contact));\r\n    };\r\n\r\n    // update the filter with new addition\r\n    const updateFilter = contact => {\r\n        // if (filteredPersons.length > 0) {\r\n        //     setFilteredPersons(filteredPersons.concat(contact));\r\n        // }\r\n        if (newName.includes(newFilter) && newFilter.length > 0) {\r\n            setFilteredPersons(filteredPersons.concat(contact));\r\n        }\r\n    };\r\n\r\n    // update filter with changing number\r\n    const updateFilterForNewNumber = contact => {\r\n        setFilteredPersons(\r\n            filteredPersons.map(person =>\r\n                person.id === contact.id ? contact : person\r\n            )\r\n        );\r\n    };\r\n\r\n    // add person on click\r\n    const addPerson = event => {\r\n        event.preventDefault();\r\n        const allNames = persons.map(person => person.name);\r\n\r\n        // reset filter if it has length 0\r\n        if (newFilter.length === 0) {\r\n            setFilteredPersons([]);\r\n        }\r\n\r\n        // create contact\r\n        const contact = {\r\n            name: newName,\r\n            number: newNumber\r\n        };\r\n\r\n        // if duplicate, update number\r\n        if (allNames.includes(newName)) {\r\n            if (\r\n                window.confirm(\r\n                    `${newName} is already added to the phonebook, would you like to update the number?`\r\n                )\r\n            ) {\r\n                // change the ID of contact to the ID of the person who should be changed\r\n                contact.id = persons.filter(\r\n                    person => person.name === contact.name\r\n                )[0].id;\r\n\r\n                // update filtered results\r\n                updateFilterForNewNumber(contact);\r\n\r\n                // add to phonebook\r\n                phonebook\r\n                    .updateContact(contact)\r\n                    .then(() => {\r\n                        setPersons(\r\n                            persons.map(person =>\r\n                                person.id === contact.id ? contact : person\r\n                            )\r\n                        );\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 404) {\r\n                            console.log(error);\r\n\r\n                            setInfoBox({\r\n                                message: `Information of ${contact.name} has already been removed from the server.`,\r\n                                isSucess: false\r\n                            });\r\n                            setTimeout(\r\n                                () =>\r\n                                    setInfoBox({\r\n                                        message: null,\r\n                                        isSuccess: false\r\n                                    }),\r\n                                5000\r\n                            );\r\n                        } else {\r\n                            setInfoBox({\r\n                                message: `Could not update number`,\r\n                                isSucess: false\r\n                            });\r\n                            setTimeout(\r\n                                () =>\r\n                                    setInfoBox({\r\n                                        message: null,\r\n                                        isSuccess: false\r\n                                    }),\r\n                                5000\r\n                            );\r\n                        }\r\n                    });\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Warning if empty\r\n        if (newName === \"\" || newNumber === \"\") {\r\n            alert(`You cannot add an empty string`);\r\n            return;\r\n        }\r\n\r\n        // update filter if search is active\r\n        updateFilter(contact);\r\n\r\n        // reset forms\r\n        setNewName(\"\");\r\n        setNewNumber(\"\");\r\n\r\n        // add contact locally\r\n        // fixContact(contact);\r\n\r\n        // add to backend server and to webpage\r\n        phonebook\r\n            .add(contact)\r\n            .then(contact => {\r\n                setInfoBox({\r\n                    message: `Successfully added ${newName}`,\r\n                    isSuccess: true\r\n                });\r\n                setTimeout(\r\n                    () => setInfoBox({ message: null, isSuccess: false }),\r\n                    5000\r\n                );\r\n            })\r\n            .catch(error => {\r\n                alert(`Could not add ${contact.name}`);\r\n            });\r\n\r\n        // download latest contacts to get correct ID\r\n        phonebook.getAll().then(phonebook => {\r\n            setPersons(phonebook);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Filter\r\n                value={newFilter}\r\n                setNewFilter={setNewFilter}\r\n                setFilteredPersons={setFilteredPersons}\r\n                persons={persons}\r\n            />\r\n\r\n            <h2>Add a new contact</h2>\r\n            <Notification message={infoBox} />\r\n            <PersonForm\r\n                addPerson={addPerson}\r\n                newName={newName}\r\n                setNewName={setNewName}\r\n                newNumber={newNumber}\r\n                setNewNumber={setNewNumber}\r\n            />\r\n            <h2>Numbers</h2>\r\n            <Numbers\r\n                contacts={persons}\r\n                filteredPersons={filteredPersons}\r\n                setFilteredPersons={setFilteredPersons}\r\n                newFilter={newFilter}\r\n                setContacts={setPersons}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}