{"version":3,"sources":["services/blogs.js","services/loginService.js","components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","request","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","addBlog","_ref2","_callee2","blog","config","_context2","headers","Authorization","post","_x","removePost","_ref3","_callee3","_context3","delete","concat","id","_x2","services_blogs","setToken","newToken","addLike","_ref4","_callee4","_context4","put","_x3","loginService","login","username","password","Blog","likeHandler","removeHandler","user","_useState","useState","_useState2","slicedToArray","expand","setExpand","blogStyle","paddingTop","paddingLeft","border","borderRadius","borderWidth","marginBottom","removeClicked","event","preventDefault","window","confirm","title","author","stopPropagation","react_default","createElement","style","onClick","url","likes","_objectSpread","name","LoginForm","loginHandler","onSubmit","bind","type","value","BlogForm","handleSubmit","blogTitle","blogAuthor","blogUrl","Notification","notification","status","success","margin","padding","color","backgroundColor","width","message","Toggable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","useField","setValue","onChange","target","reset","App","blogs","setBlogs","_useState3","_useState4","setUser","_useState5","_useState6","setNotification","useEffect","allBlogs","blogService","getBlogs","loggedUserJSON","localStorage","getItem","JSON","parse","addNotification","setTimeout","_user2","setItem","stringify","t0","logoutHandler","clear","formEvent","blogPost","newBlogs","console","log","_ref5","_callee5","newPost","_context5","map","_ref6","_callee6","deletedPost","_context6","filter","_x4","sort","b","blogItems","index","components_Blog","key","components_Notification","components_LoginForm","className","Togglable","components_BlogForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0b3d01b.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/blogs';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n    token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAll = async () => {\r\n    const request = await axios.get(baseUrl);\r\n    return request.data;\r\n};\r\n\r\nconst addBlog = async (blog) => {\r\n    const config = {\r\n        headers : { Authorization: token }\r\n    };\r\n\r\n    const request = await axios.post(baseUrl, blog, config);\r\n    return request.data;\r\n};\r\n\r\nconst removePost = async (blog) => {\r\n    const config = {\r\n        headers : { Authorization: token }\r\n    };\r\n\r\n    const request = await axios.delete(`${baseUrl}/${blog.id}`, config);\r\n    return request.data;\r\n};\r\n\r\nconst addLike = async (blog) => {\r\n    const config = {\r\n        headers : { Authorization: token }\r\n    };\r\n\r\n    const request = await axios.put(`${baseUrl}/${blog.id}`, blog, config);\r\n    return request.data;\r\n};\r\n\r\nexport default { getAll, addBlog, setToken, addLike, removePost };\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login = async (username, password) => {\r\n    const request = await axios.post(baseUrl, { username, password });\r\n    return request.data;\r\n};\r\n\r\nexport default { login };\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Blog = ({ blog, likeHandler, removeHandler, user }) => {\r\n    const [ expand, setExpand ] = useState(false);\r\n\r\n    const blogStyle = {\r\n        paddingTop   : 10,\r\n        paddingLeft  : 2,\r\n        border       : 'solid',\r\n        borderRadius : 5,\r\n        borderWidth  : 1,\r\n        marginBottom : 5\r\n    };\r\n\r\n    const likeClicked = (event) => {\r\n        event.preventDefault();\r\n\r\n        // stop div from closing\r\n        event.stopPropagation();\r\n\r\n        // add like to database\r\n        likeHandler({ ...blog, likes: blog.likes + 1 });\r\n    };\r\n\r\n    const removeClicked = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (window.confirm(`Remove post ${blog.title} by ${blog.author}?`)) {\r\n            removeHandler(blog);\r\n            setExpand(false);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const RemoveButton = () => {\r\n        // return button if correct user\r\n        if (user.username === blog.user.username) {\r\n            return (\r\n                <div>\r\n                    <button onClick={removeClicked}>Remove</button>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // if expanded\r\n    if (expand) {\r\n        return (\r\n            <div style={blogStyle}>\r\n                <div onClick={() => setExpand(false)}>\r\n                    <div>\r\n                        {blog.title} by {blog.author}\r\n                    </div>\r\n                    <div>{blog.url}</div>\r\n                    <div>\r\n                        {blog.likes} likes <button onClick={likeClicked}>Like</button>\r\n                    </div>\r\n                    <div>Added by {blog.user.name}</div>\r\n                    <RemoveButton />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // if normal state\r\n    return (\r\n        <div style={blogStyle}>\r\n            <div onClick={() => setExpand(true)}>\r\n                {blog.title} by {blog.author}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBlog.propTypes = {\r\n    blog          : PropTypes.object.isRequired,\r\n    likeHandler   : PropTypes.func.isRequired,\r\n    removeHandler : PropTypes.func.isRequired\r\n};\r\n\r\nexport default Blog;\r\n","import React from 'react';\r\n\r\nconst LoginForm = ({ loginHandler, username, password }) => {\r\n    return (\r\n        <form onSubmit={loginHandler}>\r\n            <div>\r\n                Username <input {...username.bind} />\r\n            </div>\r\n            <div>\r\n                Password <input {...password.bind} />\r\n            </div>\r\n            <div>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\n\r\nconst BlogForm = ({ handleSubmit, blogTitle, blogAuthor, blogUrl }) => {\r\n    return (\r\n        <div>\r\n            <h3>Create new post</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    title: <input {...blogTitle.bind} />\r\n                </div>\r\n                <div>\r\n                    author: <input {...blogAuthor.bind} />\r\n                </div>\r\n                <div>\r\n                    url: <input {...blogUrl.bind} />\r\n                </div>\r\n                <input type=\"submit\" value=\"submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BlogForm;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notification }) => {\r\n    if (notification.status === null) {\r\n        return null;\r\n    }\r\n\r\n    const successStyle = {\r\n        margin          : '10px 0',\r\n        padding         : '10px',\r\n        borderRadius    : '3px 3px 3px 3px',\r\n        color           : '#270',\r\n        backgroundColor : '#DFF2BF',\r\n        width           : '500px'\r\n    };\r\n\r\n    const errorStyle = {\r\n        margin          : '10px 0',\r\n        padding         : '10px',\r\n        borderRadius    : '3px 3px 3px 3px',\r\n        color           : '#D8000C',\r\n        backgroundColor : '#FFBABA',\r\n        width           : '500px'\r\n    };\r\n\r\n    return <div style={notification.success ? successStyle : errorStyle}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\n\r\nconst Toggable = (props) => {\r\n    const [ visible, setVisible ] = useState(false);\r\n\r\n    const hideWhenVisible = { display: visible ? 'none' : '' };\r\n    const showWhenVisible = { display: visible ? '' : 'none' };\r\n\r\n    const toggleVisibility = () => setVisible(!visible);\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style={showWhenVisible}>\r\n                {props.children}\r\n                <button onClick={toggleVisibility}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Toggable;\r\n","import { useState } from 'react';\r\n\r\nexport const useField = (type) => {\r\n    const [ value, setValue ] = useState('');\r\n\r\n    const onChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    const reset = () => {\r\n        setValue('');\r\n    };\r\n\r\n    return {\r\n        bind  : {\r\n            type,\r\n            value,\r\n            onChange\r\n        },\r\n        reset : () => reset(),\r\n        value : value\r\n    };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport blogService from './services/blogs';\r\nimport loginService from './services/loginService';\r\nimport Blog from './components/Blog';\r\nimport LoginForm from './components/LoginForm';\r\nimport BlogForm from './components/BlogForm';\r\nimport Notification from './components/Notification';\r\nimport Togglable from './components/Togglable';\r\nimport { useField } from './hooks/index';\r\n\r\nfunction App() {\r\n    const [ blogs, setBlogs ] = useState([ {} ]);\r\n    const [ user, setUser ] = useState(null);\r\n    const [ notification, setNotification ] = useState({ status: null, success: true, message: '' });\r\n    // const [ blogPost, setBlogPost ] = useState({ title: '', author: '', url: '' });\r\n    const username = useField('text');\r\n    const password = useField('password');\r\n    const blogTitle = useField('text');\r\n    const blogAuthor = useField('text');\r\n    const blogUrl = useField('text');\r\n\r\n    // get all blogs\r\n    useEffect(() => {\r\n        const getBlogs = async () => {\r\n            const allBlogs = await blogService.getAll();\r\n            setBlogs(allBlogs);\r\n        };\r\n        getBlogs();\r\n    }, []);\r\n\r\n    // get user if stored locally\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\r\n        if (loggedUserJSON) {\r\n            const user = JSON.parse(loggedUserJSON);\r\n            blogService.setToken(user.token);\r\n            setUser(user);\r\n        }\r\n    }, []);\r\n\r\n    // add notifications\r\n    const addNotification = (success, message) => {\r\n        setNotification({\r\n            status  : true,\r\n            success : success,\r\n            message : message\r\n        });\r\n        setTimeout(() => {\r\n            setNotification({ status: null });\r\n        }, 5000);\r\n    };\r\n\r\n    // handlers\r\n    const loginHandler = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const user = await loginService.login(username.value, password.value);\r\n\r\n            // save user locally\r\n            window.localStorage.setItem('loggedUser', JSON.stringify(user));\r\n\r\n            blogService.setToken(user.token);\r\n            setUser(user);\r\n            username.reset();\r\n            password.reset();\r\n        } catch (error) {\r\n            addNotification(false, 'Wrong username or password');\r\n        }\r\n    };\r\n\r\n    const logoutHandler = async () => {\r\n        window.localStorage.clear();\r\n        setUser(null);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const formEvent = event.target;\r\n\r\n        let blogPost = { title: blogTitle.value, author: blogAuthor.value, url: blogUrl.value };\r\n\r\n        try {\r\n            await blogService.addBlog(blogPost);\r\n            const newBlogs = await blogService.getAll();\r\n\r\n            setBlogs(newBlogs);\r\n\r\n            blogTitle.reset();\r\n            blogAuthor.reset();\r\n            blogUrl.reset();\r\n\r\n            formEvent.reset();\r\n\r\n            addNotification(true, `A new blog added: ${blogPost.title} by ${blogPost.author}`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const likeHandler = async (blog) => {\r\n        try {\r\n            const newPost = await blogService.addLike(blog);\r\n            const newBlogs = blogs.map((blog) => (blog.id === newPost.id ? newPost : blog));\r\n            setBlogs(newBlogs);\r\n            addNotification(true, 'Liked post');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const removeHandler = async (blog) => {\r\n        try {\r\n            const deletedPost = await blogService.removePost(blog);\r\n            const newBlogs = blogs.filter((blog) => blog.id !== deletedPost.id);\r\n            setBlogs(newBlogs);\r\n            addNotification(true, 'Post removed');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // sort blogs for most likes\r\n    blogs.sort((a, b) => b.likes - a.likes);\r\n\r\n    // turn blogs to HTML\r\n    const blogItems = blogs.map((blog, index) => (\r\n        <Blog key={index} blog={blog} likeHandler={likeHandler} removeHandler={removeHandler} user={user} />\r\n    ));\r\n\r\n    // return login if not logged in\r\n    if (user === null) {\r\n        return (\r\n            <div>\r\n                <h2>Log in</h2>\r\n                <Notification notification={notification} />\r\n                <LoginForm loginHandler={loginHandler} username={username} password={password} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // return blogs if logged in\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <h2>Blogs</h2>\r\n                <Notification notification={notification} />\r\n                <div>\r\n                    {user.name} logged in\r\n                    <input type=\"button\" value=\"logout\" onClick={logoutHandler} />\r\n                </div>\r\n                <br />\r\n                <Togglable buttonLabel=\"Create new post\">\r\n                    <BlogForm\r\n                        handleSubmit={handleSubmit}\r\n                        blogTitle={blogTitle}\r\n                        blogAuthor={blogAuthor}\r\n                        blogUrl={blogUrl}\r\n                    />\r\n                </Togglable>\r\n                <br />\r\n\r\n                <h3>Blog posts</h3>\r\n                <div>{blogItems}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}